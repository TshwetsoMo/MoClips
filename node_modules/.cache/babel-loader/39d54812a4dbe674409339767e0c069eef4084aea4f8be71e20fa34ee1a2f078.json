{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tshwe\\\\Downloads\\\\moclips\\\\moclips\\\\src\\\\Pages\\\\timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport './timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movieData, setMovieData] = useState([]); // Initialize as an empty array\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=4932ab16`);\n      if (response.data.Search) {\n        setMovieData(response.data.Search);\n      } else {\n        setMovieData([]);\n      }\n    } catch (error) {\n      console.error('Error fetching movie data:', error);\n    }\n  };\n  const generateChartData = () => {\n    if (!movieData || movieData.length === 0) return null;\n    const data = movieData.map(movie => {\n      if (movie.Year) {\n        return {\n          x: parseInt(movie.Year),\n          // Parse Year as an integer\n          y: 1,\n          // Fixed value for the Y-axis to create a dot\n          poster: movie.Poster,\n          // Store poster URL for tooltip\n          title: movie.Title // Store movie title for tooltip\n        };\n      }\n\n      return null;\n    }).filter(point => point !== null);\n    return {\n      datasets: [{\n        label: 'Movies',\n        data: data,\n        pointRadius: 8,\n        pointHoverRadius: 12,\n        backgroundColor: 'rgba(75, 192, 192, 1)',\n        borderColor: 'rgba(75, 192, 192, 1)'\n      }]\n    };\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        min: 1900,\n        // Set the minimum year\n        max: new Date().getFullYear() // Set the current year as the maximum\n      },\n\n      y: {\n        beginAtZero: true,\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: generateChartData(),\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"5cVltbny5mh4HogHi7aFa7vN2es=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","Line","axios","jsxDEV","_jsxDEV","Timeline","_s","searchTerm","setSearchTerm","movieData","setMovieData","fetchData","response","get","data","Search","error","console","generateChartData","length","map","movie","Year","x","parseInt","y","poster","Poster","title","Title","filter","point","datasets","label","pointRadius","pointHoverRadius","backgroundColor","borderColor","options","scales","type","position","min","max","Date","getFullYear","beginAtZero","display","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tshwe/Downloads/moclips/moclips/src/Pages/timeline.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport './timeline.css';\r\n\r\nconst Timeline = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [movieData, setMovieData] = useState([]); // Initialize as an empty array\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n        const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=4932ab16`);\r\n        if (response.data.Search) {\r\n            setMovieData(response.data.Search);\r\n        } else {\r\n            setMovieData([]);\r\n        }\r\n        } catch (error) {\r\n        console.error('Error fetching movie data:', error);\r\n        }\r\n    };\r\n\r\n  const generateChartData = () => {\r\n  if (!movieData || movieData.length === 0) return null;\r\n\r\n  const data = movieData.map((movie) => {\r\n    if (movie.Year) {\r\n      return {\r\n        x: parseInt(movie.Year), // Parse Year as an integer\r\n        y: 1, // Fixed value for the Y-axis to create a dot\r\n        poster: movie.Poster, // Store poster URL for tooltip\r\n        title: movie.Title, // Store movie title for tooltip\r\n      };\r\n    }\r\n    return null;\r\n  }).filter((point) => point !== null);\r\n\r\n  return {\r\n    datasets: [\r\n      {\r\n        label: 'Movies',\r\n        data: data,\r\n        pointRadius: 8,\r\n        pointHoverRadius: 12,\r\n        backgroundColor: 'rgba(75, 192, 192, 1)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        position: 'bottom',\r\n        min: 1900, // Set the minimum year\r\n        max: new Date().getFullYear(), // Set the current year as the maximum\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"timeline-page\">\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={fetchData}>Search</button>\r\n      </div>\r\n      <div className=\"timeline-chart\">\r\n        <Line data={generateChartData()} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}