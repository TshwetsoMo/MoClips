{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tshwe\\\\Downloads\\\\moclips\\\\moclips\\\\src\\\\Pages\\\\timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movieData, setMovieData] = useState(null);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=4932ab16`);\n      if (response.data.Search) {\n        setMovieData(response.data.Search);\n      } else {\n        setMovieData([]);\n      }\n    } catch (error) {\n      console.error('Error fetching movie data:', error);\n    }\n  };\n  const generateChartData = () => {\n    if (!movieData) return null;\n    const years = [];\n    const posters = [];\n    movieData.forEach(movie => {\n      if (movie.Year && movie.Poster) {\n        years.push(movie.Year);\n        posters.push(movie.Poster);\n      }\n    });\n    return {\n      labels: years,\n      datasets: [{\n        label: 'Movies',\n        data: years.map((year, index) => ({\n          x: year,\n          y: index + 1,\n          poster: posters[index]\n        })),\n        pointRadius: 8,\n        pointHoverRadius: 12,\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2\n      }]\n    };\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        min: 1900,\n        // Set the minimum year\n        max: new Date().getFullYear() // Set the current year as the maximum\n      },\n\n      y: {\n        beginAtZero: true,\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: generateChartData(),\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"LxyBnfz8t58kR3n99S1KHFvQRF8=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","Line","axios","jsxDEV","_jsxDEV","Timeline","_s","searchTerm","setSearchTerm","movieData","setMovieData","fetchData","response","get","data","Search","error","console","generateChartData","years","posters","forEach","movie","Year","Poster","push","labels","datasets","label","map","year","index","x","y","poster","pointRadius","pointHoverRadius","backgroundColor","borderColor","borderWidth","options","scales","type","position","min","max","Date","getFullYear","beginAtZero","display","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tshwe/Downloads/moclips/moclips/src/Pages/timeline.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst Timeline = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [movieData, setMovieData] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://www.omdbapi.com/?s=${searchTerm}&apikey=4932ab16`);\r\n      if (response.data.Search) {\r\n        setMovieData(response.data.Search);\r\n      } else {\r\n        setMovieData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching movie data:', error);\r\n    }\r\n  };\r\n\r\n  const generateChartData = () => {\r\n    if (!movieData) return null;\r\n\r\n    const years = [];\r\n    const posters = [];\r\n    movieData.forEach((movie) => {\r\n      if (movie.Year && movie.Poster) {\r\n        years.push(movie.Year);\r\n        posters.push(movie.Poster);\r\n      }\r\n    });\r\n\r\n    return {\r\n      labels: years,\r\n      datasets: [\r\n        {\r\n          label: 'Movies',\r\n          data: years.map((year, index) => ({\r\n            x: year,\r\n            y: index + 1,\r\n            poster: posters[index],\r\n          })),\r\n          pointRadius: 8,\r\n          pointHoverRadius: 12,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        position: 'bottom',\r\n        min: 1900, // Set the minimum year\r\n        max: new Date().getFullYear(), // Set the current year as the maximum\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"timeline-page\">\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={fetchData}>Search</button>\r\n      </div>\r\n      <div className=\"timeline-chart\">\r\n        <Line data={generateChartData()} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}